div.searchDropdown {
  --height-dropdown: 55vh;

  /* Absolute positioning is used to render results container under the search
    bar, which has relative positioning applied to it too; while keeping it out
    of document flow. The upmost container is also positioned relatively. */
  position: absolute;
  z-index: var(--z-index-search-overlay);
  /* Just under the closes relative sibling. */
  top: 115%;
  left: 0;
  right: 0;


  width: 100%;
  min-height: 0;
  max-height: var(--height-dropdown);

  overflow-x: hidden;
  overflow-y: scroll;

  /* This hack is used to achieve a border with gradient, and due to how CSS
  works background-clip and essentially padding-box, the background color should
  be defined as a gradient too. */
  background:
    linear-gradient(var(--color-black) 0 0) padding-box,
    var(--color-gradient-ram) border-box;
  /* To not hide the gradient. */
  border: var(--border-w-3) solid transparent;
  border-radius: var(--border-radius-large);

  display: grid;
  /* setting flex to 1fr is same as setting minmax(auto, 1fr); which means the
  track cannot be smaller than the grid item. when using 0 instead of `auto`,
  track is free to resize to a 0 width/height.
  (ref: https: //stackoverflow.com/questions/52861086/why-does-minmax0-1fr-work-for-long-elements-while-1fr-doesnt) */
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: var(--space-x3);

  padding: var(--space-x3) var(--space-x3);

  /* This `scrollbar-*` attributes aren't widely supported by browsers. */
  scrollbar-color: var(--color-rick-blue) transparent;
  scrollbar-width: thin;

  &.empty {
    height: min-content;

    display: flex;
    justify-content: center;

    padding: var(--space-x6) var(--space-x12);

    scrollbar-color: transparent transparent;
  }

  &.hidden {
    /* When the element is only `hidden`, the ::before element on CharSelector
    stays visible on screen. */
    /*visibility: hidden;*/
    display: none;
  }
}

p.noMatchText {
  font: var(--font-title-reg);
}